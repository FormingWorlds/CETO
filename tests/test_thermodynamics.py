import numpy as np
import numpy.testing as npt
import pytest
from source.thermodynamics import calculate_GRT

## Define some test cases via pytest parametrisation
@pytest.mark.parametrize(
    "test, expected",
    [
        ([1300.0],[[2.15043735e+01],[1.58869515e+01],[4.91324181e+00],[-2.98480563e+01],[-5.70743367e+00],
                   [4.04546489e+00],[-3.32415620e+01],[-1.56956695e+01],[-2.58250798e+01],[-1.62625546e+01],
                   [3.75533010e+01],[3.93997591e+01],[4.30331984e+01],[2.00553855e+01],[1.25000760e+01],
                   [1.22369231e+01],[1.59847217e+01],[1.48861094e+01],[3.36434851e+01]]),
        ([3000.50251256],[[7.58139735e+00],[4.94531919e+00],[2.73835469e+00],[-7.42373294e+00],[9.69599486e-01],
                          [9.30613038e-01],[-1.30618397e+01],[-1.10475268e+00],[-2.44600712e+01],[-3.09095566e+00],
                          [4.41753499e+00],[4.71287049e+00],[2.48569284e+00],[-6.86849684e+00],[1.25000992e+01],
                          [1.33551432e+01],[1.57120694e+01],[1.46134571e+01],[2.63644141e+01]]),
        ([6000.0],[[2.26037103e+00],[7.63690723e-01],[1.62537204e+00],[1.14630361e+00],[3.33746534e+00],
                   [-2.59808351e-01],[-5.71746644e+00],[4.38353102e+00],[-2.33973853e+01],[2.15910231e+00],
                   [-7.42797863e+00],[-7.55181165e+00],[-1.18926536e+01],[-1.54917216e+01],[1.24945476e+01],
                   [1.37825000e+01],[1.56078683e+01],[1.45092560e+01],[2.29182902e+01]])
    ])

def test_calculate_GRT(test, expected):
    npt.assert_array_almost_equal(calculate_GRT(np.array(test)), np.array(expected), decimal=8)




